name: IAM Roles Setup

on:
  push:
    branches:
      - main

jobs:
  create_iam_roles:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.1

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform/iam-roles-setup

      - name: Terraform Apply
        run: terraform apply -var 'AWS_ACCOUNT_ID=${{ secrets.AWS_ACCOUNT_ID}}' -auto-approve
        working-directory: ./terraform/iam-roles-setup

      - name: Set Outputs and Trigger Dispatch
        id: trigger-dispatch
        run: |
          echo "EKS_NODE_GROUP_ROLE_ARN=$(terraform output -raw eks_node_group_role_arn)" >> $GITHUB_ENV
          echo "GITHUB_ACTIONS_ROLE_ARN=$(terraform output -raw github_actions_role_arn)" >> $GITHUB_ENV
          echo "MY_AWS_ADMIN_ROLE_ARN=$(terraform output -raw my_aws_admin_role_arn)"     >> $GITHUB_ENV
        working-directory: ./terraform/iam-roles-setup

      - name: Trigger EKS Deploy Workflow
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.MY_GITHUB_TOKEN }}
          event-type: iam-roles-updated
          client-payload: |-
            {
              "eks_node_group_role_arn": "${{ env.EKS_NODE_GROUP_ROLE_ARN }}",
              "github_actions_role_arn": "${{ env.GITHUB_ACTIONS_ROLE_ARN }}",
              "my_aws_admin_role_arn":   "${{ env.MY_AWS_ADMIN_ROLE_ARN }}"
            }
